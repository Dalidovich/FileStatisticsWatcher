@using FileStatisticsWatcher.Models.Entities;
@using FileStatisticsWatcher.Services;
@model FileSettings[]
<div style="display: flex;">
    <p style="display:inline-block; margin-right:10px">
        files count - 
    </p>
    <p id="filesCount" style="display:inline-block">
        @Model.Length
    </p>
</div>

<table>
    <thead>
        <tr class="text-center">
            <th>Name</th>
            <th>Path</th>
            <th>Depth</th>
            <th>Extension</th>
            <th>Size</th>
            <th>Last Access Date (UTC)</th>
            <th>Create Date (UTC)</th>
        </tr>
    </thead>
    <tbody id="files">        
        @await Html.PartialAsync("_filesSettings.cshtml",Model)
    </tbody>
</table>

<script>
    var page = 0;
    var _inCallback = false;
    const filesElement = document.getElementById("files");
    const directoriesCountElement = document.getElementById("filesCount");

    function fileLoad() {
        if (page > -1 && !_inCallback) {
            _inCallback = true;
            page++;
            let response = fetch('/FileSettings/AllFiles?page='+page)
                .then(response => response.text())
                .then(data=>{
                    if (data != '')
                    {
                        filesElement.innerHTML += data;
                        directoriesCountElement.innerHTML = Number(directoriesCountElement.innerHTML) + (data.match((/<td>/g) || []).length/7);
                    }
                    else {
                        page = -1;
                    }
                    _inCallback = false;
                });
        }
    }
    function setFileScrollEvent() {
        window.addEventListener('scroll', function() {
            if (window.pageYOffset == document.documentElement.scrollHeight - window.innerHeight) {
                fileLoad();
            }
        });
    }
setFileScrollEvent();
</script>